'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var latinToPersianMap = ['۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹', '۰'];
var latinNumbers = [/1/g, /2/g, /3/g, /4/g, /5/g, /6/g, /7/g, /8/g, /9/g, /0/g];
var arabicToPersianMap = ['۴', '۵', '۶'];
var arabicNumbers = [/٤/g, /٥/g, /٦/g];

function latinToPersian(string) {
  var result = string;

  for (var index = 0; index < 10; index++) {
    result = result.replace(latinNumbers[index], latinToPersianMap[index]);
  }

  return result;
}

function arabicToPersian(string) {
  var result = string;

  for (var index = 0; index < 10; index++) {
    result = result.replace(arabicNumbers[index], arabicToPersianMap[index]);
  }

  return result;
}

var PersianNumber = (function (_Component) {
  _inherits(PersianNumber, _Component);

  function PersianNumber() {
    _classCallCheck(this, PersianNumber);

    _get(Object.getPrototypeOf(PersianNumber.prototype), 'constructor', this).apply(this, arguments);
  }

  _createClass(PersianNumber, [{
    key: 'convert',
    value: function convert(string) {
      var result = undefined;

      if (this.props.latin) {
        result = latinToPersian(string);
      }

      if (this.props.arabic) {
        result = arabicToPersian(result);
      }

      return result;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this = this;

      var children = this.props.children;

      if (!(children instanceof Array)) {
        children = [children];
      }

      return _react2['default'].createElement(
        'span',
        null,
        children.map(function (child) {
          if (typeof child === 'string') {
            return _this.convert(child);
          } else if (typeof child === 'number') {
            return _this.convert(child.toString());
          }
          return child;
        })
      );
    }
  }], [{
    key: 'propTypes',
    value: {
      arabic: _react.PropTypes.bool,
      latin: _react.PropTypes.bool,
      children: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.string])
    },
    enumerable: true
  }, {
    key: 'defaultProps',
    value: {
      latin: true,
      arabic: false
    },
    enumerable: true
  }]);

  return PersianNumber;
})(_react.Component);

exports['default'] = PersianNumber;
module.exports = exports['default'];